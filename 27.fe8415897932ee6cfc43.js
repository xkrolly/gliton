(window.webpackJsonp = window.webpackJsonp || []).push([[27], {
    147: function(n, e, t) {
        "use strict";
        class a extends HTMLElement {
            static get observedAttributes() {
                return ["label"]
            }
            constructor() {
                super();
                this.attachShadow({
                    mode: "open"
                }).innerHTML = '\n      <style>\n        :host {\n          --button-color: transparent;\n          --button-color-hover: #e2e2e2;\n          --font-color: #000000;\n          --font-size: 1em;\n          --icon-size: 24px;\n          --button-padding: 0 8px 0 8px;\n          --button-padding-circle: 8px;\n          --border-radius: 2px;\n          display: block;\n          width: fit-content;\n        }\n        \n        button {\n          border: none;\n          border-radius: var(--border-radius);\n          min-height: 36px;\n          padding: var(--button-padding);\n          font-size: var(--font-size);\n          color: var(--font-color);\n          background-color: var(--button-color);\n          cursor: pointer;\n          outline: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          position: relative;\n          overflow: hidden;\n        }\n        \n        button:hover {\n          transition: background-color 0.3s ease-out;\n          background-color: var(--button-color-hover);\n        }\n        \n        #label {\n          display: inline-block;\n          position: relative;\n          margin-right: 8px;\n          margin-left: 8px;\n        }\n        \n        :host([label]) button {\n          min-width: 88px;\n        }\n        \n        :host([raised]) {\n          --button-color: #e2e2e2;\n        }\n        \n        :host([raised]) button {\n          background-color: var(--button-color);\n          box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px;\n        }\n        \n        :host([disabled]) {\n          cursor: not-allowed;\n        }\n        \n        :host([disabled]) button {\n          opacity: 0.5;\n          pointer-events: none;\n        }\n        \n        :host([active]) .ripple {\n          animation-name: ripple;\n          animation-duration: 0.4s;\n          animation-timing-function: ease-out;\n          background-color: #808080;\n          border-radius: 50%;\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n        }\n        \n        :host([circle]) button {\n          border-radius: 50%;\n          --button-padding: var(--button-padding-circle);\n        }\n        \n        ::slotted([slot="left-icon"]) {\n            float: left;\n            font-size: var(--icon-size) !important;\n        }\n        \n        ::slotted([slot="toggle-icon"]) {\n            float: left;\n            font-size: var(--icon-size) !important;\n        }\n        \n        slot[name="toggle-icon"] {\n            display: none;\n        }\n        \n        :host([toggled]) slot[name="left-icon"] {\n          display: none;\n        }\n        \n        :host([toggled]) slot[name="toggle-icon"] {\n          display: block;\n        }\n        \n        ::slotted([slot="right-icon"]) {\n            float: right;\n            font-size: var(--icon-size) !important;\n        }\n        \n        ::slotted([slot="file-input"]) {\n          position: absolute;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          opacity: 0;\n          z-index: 9;\n        }\n        \n        @keyframes ripple {\n          from {\n            width: 0;\n            height: 0;\n            opacity: 0.8;\n          }\n          to {\n            width: 100px;\n            height: 100px;\n            opacity: 0.1;\n          }                \n        }\n      </style>\n      \n      <button type="button">\n        <div class="ripple"></div>\n        <slot name="file-input"></slot>\n        <slot name="left-icon"></slot>\n        <slot name="toggle-icon"></slot>\n        <span id="label"></span>\n        <slot name="right-icon"></slot>\n      </button>\n  ',
                this.button = this.shadowRoot.querySelector("button"),
                this.label = this.shadowRoot.querySelector("#label"),
                this.ripple = this.shadowRoot.querySelector(".ripple")
            }
            connectedCallback() {
                this.hasAttribute("label") ? this.label.textContent = this.getAttribute("label") : this.label.style.display = "none";
                const n = this.shadowRoot.querySelector('slot[name="left-icon"]')
                  , e = this.shadowRoot.querySelector('slot[name="toggle-icon"]');
                this.hasToggleIcon = n.assignedNodes().length && e.assignedNodes().length,
                this.toggled = !1,
                this.button.addEventListener("click", ()=>{
                    this.active = !0,
                    this.toggled = !this.toggled
                }
                ),
                this.ripple.addEventListener("animationend", ()=>{
                    this.active = !1
                }
                )
            }
            attributeChangedCallback(n) {
                "label" === n && (this.hasAttribute("label") ? this.label.textContent = this.getAttribute("label") : this.label.style.display = "none")
            }
            get toggled() {
                return this.hasAttribute("toggled")
            }
            set toggled(n) {
                this.hasToggleIcon && (n ? this.setAttribute("toggled", "") : this.removeAttribute("toggled"))
            }
            get disabled() {
                return this.hasAttribute("disabled")
            }
            set disabled(n) {
                this.button.disabled = n,
                n ? this.setAttribute("disabled", "") : this.removeAttribute("disabled")
            }
            get active() {
                return this.hasAttribute("active")
            }
            set active(n) {
                n ? this.setAttribute("active", "") : this.removeAttribute("active")
            }
        }
        customElements.get("material-button") || customElements.define("material-button", a)
    },
    160: function(n, e, t) {
        "use strict";
        t.r(e),
        t.d(e, "template", (function() {
            return a
        }
        ));
        t(147);
        const a = '\n<div class="view home">\n  <header id="main-header">\n    <img class="logo" src="src/img/pwalogo.svg">\n  </header>\n  <div class="network-status">\n    <header>\n      <i class="material-icons">wifi_off</i>\n      <p>Your device is currently offline.</p>\n    </header>\n  </div>\n  <div class="content">\n    <h1>What PWA Can Do Today</h1>\n    <p>\n      A showcase of what is possible with Progressive Web Apps today. \n    </p>\n    <p>\n      A Progressive Web App (PWA) is a website that can be installed on your device and provide an app-like experience \n      <a href="/info">read more</a>\n    </p>\n    \n    <section id="installation">\n      <h2>How to use this app</h2>\n    \n      <p>\n        This app is itself a Progressive Web App which means it can be installed to the homescreen of your\n        mobile device or to your desktop.\n      </p>\n      \n      <p>\n        After installing you can check the demos of the features below to see what is supported on your device.\n      </p>\n      \n      <p>\n        When the button below becomes enabled, you can install this app.\n      </p>\n      \n      <p>\n        <material-button id="install-button" label="Install to home screen" raised>\n          <i class="material-icons" slot="left-icon">add_to_home_screen</i>\n        </material-button>\n      </p>\n    </section>\n    \n    <section id="installed">\n      <p>\n        Check the demos of the features below to see what is supported on your device.\n      </p>\n    </section>\n    \n    <h2>Features</h2>\n    \n    <section class="feature-grid">\n      <div class="feature">\n        <a href="/media">\n          <material-button>\n              <i class="material-icons" slot="left-icon">videocam</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Media capture</header>\n          <p>Media capture allows apps to use the camera and microphone of a device</p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/geolocation">\n          <material-button>\n              <i class="material-icons" slot="left-icon">gps_fixed</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Geolocation</header>\n          <p>\n            The Geolocation API enables users to share their location with a web app.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/notifications">\n          <material-button>\n              <i class="material-icons" slot="left-icon">notifications_none</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Notifications</header>\n          <p>\n            The Notifications API enables web apps to display notifications, even when the app is not active.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/contacts">\n          <material-button>\n              <i class="material-icons" slot="left-icon">account_box</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Contact picker</header>\n          <p>\n            The Contact Picker API allows apps to select the user\'s contacts after permission has been granted.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/web-share">\n          <material-button>\n              <i class="material-icons" slot="left-icon">share</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Web share</header>\n          <p>\n            The Web Share API invokes the native share mechanism of the device and allows users to share \n            text, URLs or files.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/authentication">\n          <material-button>\n              <i class="material-icons" slot="left-icon">fingerprint</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Authentication</header>\n          <p>\n            Web Authentication API (WebAuthn) enables passwordless authentication through your device\'s fingerprint \n            reader or an external USB Security Key.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/file-system">\n          <material-button>\n              <i class="material-icons" slot="left-icon">insert_drive_file</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>File System</header>\n          <p>\n            Access to the file system of the user\'s device\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/vibration">\n          <material-button>\n              <i class="material-icons" slot="left-icon">vibration</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Vibration</header>\n          <p>\n            The Vibration API enables web apps to make a mobile device vibrate.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/audio-recording">\n          <material-button>\n              <i class="material-icons" slot="left-icon">mic</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Audio recording</header>\n          <p>\n            Record audio using MediaRecorder and visualize audio using Web Audio API.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/audio">\n          <material-button>\n              <i class="material-icons" slot="left-icon">play_circle_filled</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Audio</header>\n          <p>\n            The Media Session API allows an app to display controls for media playback on a device\'s lock screen.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/bluetooth">\n          <material-button>\n              <i class="material-icons" slot="left-icon">bluetooth</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Bluetooth</header>\n          <p>\n            The Web Bluetooth API enables apps to connect to Bluetooth Low Energy (BLE) devices and read values from or \n            write values to it.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/nfc">\n          <material-button>\n              <i class="material-icons" slot="left-icon">nfc</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>NFC</header>\n          <p>\n            The Web NFC API enables web apps to read and write to NFC tags.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/barcode">\n          <material-button>\n              <i class="material-icons" slot="left-icon">qr_code_scanner</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Barcode detection</header>\n          <p>\n            The Barcode Detection API detects barcodes and qr-codes in images.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/ar-vr">\n          <material-button>\n              <i class="material-icons" slot="left-icon">layers</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>AR/VR</header>\n          <p>\n            Augmented reality enables apps to place virtual objects in reality.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/payment">\n          <material-button>\n              <i class="material-icons" slot="left-icon">credit_card</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Payment</header>\n          <p>\n            The Payment Request API provides a browser-based method to enable users to make payments on the web, using a credit \n            card, Apple Pay or Google Pay.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/wake-lock">\n          <material-button>\n              <i class="material-icons" slot="left-icon">screen_lock_portrait</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Wake lock</header>\n          <p>\n            The Screen Wake Lock API enables web apps to prevent devices from dimming or locking the screen when the app \n            needs to keep running.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/device-orientation">\n          <material-button>\n              <i class="material-icons" slot="left-icon">screen_rotation</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Orientation</header>\n          <p>\n            The DeviceOrientationEvent gives information about the physical orientation of the user\'s device.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/device-motion">\n          <material-button>\n              <i class="material-icons" slot="left-icon">3d_rotation</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Motion</header>\n          <p>\n            The DeviceMotionEvent gives information about the speed of changes for the position and orientation of \n            the user\'s device.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/multi-touch">\n          <material-button>\n              <i class="material-icons" slot="left-icon">touch_app</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Multi touch</header>\n          <p>\n            Touch events enable apps to capture complex touch behaviour.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/network-info">\n          <material-button>\n              <i class="material-icons" slot="left-icon">network_check</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Network info</header>\n          <p>\n            The NetworkInformation API provides information about the connection of a device, allowing web apps to adapt \n            functionality based on network quality.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/speech-synthesis">\n          <material-button>\n              <i class="material-icons" slot="left-icon">record_voice_over</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Speech synthesis</header>\n          <p>\n            Speech synthesis provides text-to-speech and allows programs to read out their text content.\n          </p>\n        </aside>\n      </div>\n      \n      <div class="feature">\n        <a href="/speech-recognition">\n          <material-button>\n              <i class="material-icons" slot="left-icon">hearing</i>\n          </material-button>\n        </a>\n        <aside>\n          <header>Speech recogniton</header>\n          <p>\n            Speech recognition is part of the Web Speech API and provides the ability to recognize voice context from an \n            audio input.\n          </p>\n        </aside>\n      </div>\n    </section>\n  </div>\n</div>\n'
    }
}]);
